

1. manifest -> declerative -> reference -> detail configuretion 
2. imperative  -> commands -> no reference -> 


 kubectl create deployment my-ngin --image=nginx --replicas=5 --dry-run=client -o yaml > my-nginx.yaml
 kubectl create deployment my-ngin --image=nginx --replicas=5 -o yaml > my-nginx.yaml
 kubectl create deployment my-ngin --image=nginx --replicas=5 
 
 kubectl create configmap nginx-config --from-file=index.html
 
 
 apiVersion: v1
data:
  index.html: "<h1>\n\thello world this is cdec online batch we are learing kubernetes
    \n</h1>\n"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: nginx-config
  
  kubectl create configmap nginx-config --from-file=index.html --dry-run=client -o yaml > nginx-config.yaml
  
  
apiVersion: v1
kind: Pod
metadata:
  name: nginx
spec:
  containers:
    - name: nginx
      image: nginx 
      volumeMounts:
      - name: nginx-config
        mountPath: /usr/share/nginx/html/
  volumes:
    - name: nginx-config
      configMap:
        name: nginx-config
		
		


kubectl exec -it $(podname) any command want to execute in container

Kubectl describe secret -> 

kubectl describe configmap -> 
kubectl create secret generic name --from-file=fil
kubectl get secret 
kubectl describe secret

NAMESPACE

kubectl get namespace
kubectl create namespace dev
kubectl config set-context --current --namespace=NAMESPACE
kubens -> install 

kubens dev -> to change namespace
kubens -> to get namespace 

difference between secret and configmap 
difference between deployment and stateful set 
difference between  daemonset and deployment and  stateful set 



	{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Federated": "arn:aws:iam::146140593278:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/037A1DBD326C7253BCAD54C969A00CF1"
      },
      "Action": "sts:AssumeRoleWithWebIdentity",
      "Condition": {
        "StringEquals": {
          "oidc.eks.ap-south-1.amazonaws.com/id/037A1DBD326C7253BCAD54C969A00CF1:aud": "sts.amazonaws.com",
          "oidc.eks.ap-south-1.amazonaws.com/id/037A1DBD326C7253BCAD54C969A00CF1:sub": "system:serviceaccount:kube-system:ebs-csi-controller-sa"
        }
      }
    }
  ]
}

aws iam create-role \
  --role-name AmazonEKS_EBS_CSI_DriverRole \
  --assume-role-policy-document file://"aws-ebs-csi-driver-trust-policy.json"

aws iam attach-role-policy \
  --policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
  --role-name AmazonEKS_EBS_CSI_DriverRole
  
  aws eks describe-addon-versions --addon-name aws-ebs-csi-driver

  
  # eksctl create addon --name aws-ebs-csi-driver --cluster akshay-cluster --service-account-role-arn arn:aws:iam::146140593278:role/AmazonEKS_EBS_CSI_DriverRole --force


aws eks create-addon --cluster-name my-cluster --addon-name aws-ebs-csi-driver \
  --service-account-role-arn arn:aws:iam::146140593278:role/AmazonEKS_EBS_CSI_DriverRole

aws eks describe-addon --cluster-name akshay-cluster --addon-name aws-ebs-csi-driver --query "addon.addonVersion" --output text

https://docs.aws.amazon.com/eks/latest/userguide/csi-iam-role.html

https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html

https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html
